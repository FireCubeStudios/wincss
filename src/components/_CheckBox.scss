/**
* WinCSS CheckBox Component
* http://github.com/tropix126/WinCSS
*/

$CheckMarkSymbol: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='17' ViewBox='24 17'%3E%3Cpath d='m 24 1 l -16 16 l -8 -8 l 1 -1 l 7 7 l 15 -15 z'/%3E%3C/svg%3E";

input[type="checkbox" i]:not(.ToggleSwitch) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    appearance: none;
    outline: none;
    box-sizing: border-box;
    margin: 0;
    border-radius: 2px;
    width: 20px;
    height: 20px;
    border: 1px solid;
    &:not([disabled]) {
        border-color: var(--CheckBoxBorderUnchecked);
        &:hover {
            border-color: var(--CheckBoxBorderUncheckedPointerOver);
        }
        &:active {
            background-color: var(--CheckBoxBackgroundUncheckedPressed);
            border-color: var(--CheckBoxBackgroundUncheckedPressed);
        }
        &:checked {
            background-color: var(--CheckBoxBackgroundChecked);
            border-color: var(--CheckBoxBorderChecked);
            &:hover {
                background-color: var(--CheckBoxBackgroundCheckedPointerOver);
            }
            &:active {
                background-color: var(--CheckBoxBackgroundCheckedPressed);
            }
        }
    }
    &[disabled] {
        border-color: var(--CheckBoxBorderUncheckedDisabled);
        &:checked {
            background-color: var(--CheckBoxBackgroundCheckedDisabled);
            border-color: var(--CheckBoxBorderCheckedDisabled);
        }
    }
    &:checked::after {
        content: '';
        background-color: var(--CheckBoxGlyphChecked);
    }
    &:checked:not([indeterminate])::after {
        width: 12px;
        height: 12px;
        mask: url($CheckMarkSymbol) center/contain no-repeat;
    }
    &:checked[indeterminate]::after {
        width: 8px;
        height: 8px;
    }
}